package com.revature.bank.exceptions;

import java.text.NumberFormat;
import java.util.Locale;

import com.revature.bank.application.BankApplication;

public class InsufficientFundsException extends Exception {
	/**
	 * generated by eclipse
	 */
	private static final long serialVersionUID = -6483431666191858465L;

	/**
	 * Default constructor. Just gives an exception with no message.
	 */
	public InsufficientFundsException() {
		super();
	}

	/**
	 * Returns an exception, similar to the constructor given balance and withdrawal
	 * amount but specific for the given locale.
	 * 
	 * @param balance    amount in balance
	 * @param withdrawal amount attempted to withdraw.
	 * @param locale     Locale used to format the balance and withdrawal amounts.
	 * @return An InsufficientFundsException. public
	 */
	InsufficientFundsException(final double balance, final double withdrawal, final Locale locale) {
		this(balance, withdrawal, NumberFormat.getCurrencyInstance(locale));
	}

	/**
	 * Gives an exception with a message explaining that the withdrawal was more
	 * than the balance (tells the withdrawal amount and the balance amount) using
	 * the specified NumberFormatter.
	 * 
	 * @param balance        meant to be amount in your balance.
	 * @param withdrawal     the amount attempted to withdrawal (there's no check or
	 *                       requirement to make sure that withdrawal > balance).
	 * @param currencyFormat - NumberFormat used to print the amounts (should be a
	 *                       currency format so that it includes the currency
	 *                       symbol).
	 */
	public InsufficientFundsException(final double balance, final double withdrawal,
			final NumberFormat currencyFormat) {
		this("Insufficient Funds. Tried to withdraw " + currencyFormat.format(withdrawal) + " with a balance of "
				+ currencyFormat.format(balance));
	}

	/**
	 * This is not meant to be called outside of this class. It just calls the
	 * Exception method with the given message.
	 * 
	 * @param message
	 */
	protected InsufficientFundsException(final String message) {
		super(message);
	}
}
